/*
    DML
    1. DATA MANIPULATION LANGUAGE
    2. 데이터 조작어
    3. 데이터 다루는 언어
    4. 트랜잭션 처리 필요
        1) 한 번에 수행해야 하는 작업
        2) 2가지 이상의 작업이 하나의 트랜잭션으로 구성
        3) 작업의 저장을 의미하는 COMMIT 취소는 ROLLBACK
        
    INSERT INTO VALUES
    UPDATE SET WHERE
    DELETE FROM WHERE
*/

/*
시퀀스
NEXTVAL, CURRVAL
*/

-- 시퀀스도 테이블처럼 관리 가능
-- 부모자식의 관계가 없기 때문에 삭제 순서는 없다
DROP SEQUENCE DEPT_SEQ;
DROP SEQUENCE EMPLOYEE_SEQ;

CREATE SEQUENCE DEPT_SEQ
    INCREMENT BY 1
    START WITH 1
    NOMAXVALUE
    NOMINVALUE
    NOCYCLE
    CACHE 20
    NOORDER;
    
CREATE SEQUENCE EMPLOYEE_SEQ
    START WITH 1001
    NOCACHE;
    
DROP TABLE EMPLOYEE_TB;
DROP TABLE DEPARTMENT_TB;
    
CREATE TABLE DEPARTMENT_TB (
    DEPT_NO NUMBER NOT NULL,
    DEPT_NAME VARCHAR2(15 BYTE) NOT NULL,
    LOCATION VARCHAR2(15 BYTE) NOT NULL,
    
    CONSTRAINT PK_DEPARTMENT PRIMARY KEY(DEPT_NO)
);

CREATE TABLE EMPLOYEE_TB (
    EMP_NO NUMBER NOT NULL,
    NAME VARCHAR2(20 BYTE) NOT NULL,
    DEPART NUMBER,
    POSITION VARCHAR2(20 BYTE),
    GENDER CHAR(2 BYTE),
    HIRE_DATE DATE,
    SALARY NUMBER,
    
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EMP_NO),
    CONSTRAINT FK_EMPLOYEE_DEPARTMENT FOREIGN KEY(DEPART) REFERENCES DEPARTMENT_TB(DEPT_NO) ON DELETE SET NULL
);

INSERT INTO DEPARTMENT_TB(DEPT_NO, DEPT_NAME, LOCATION) VALUES (DEPT_SEQ.NEXTVAL, '영업부', '대구');
INSERT ALL
    INTO DEPARTMENT_TB VALUES (DEPT_SEQ.NEXTVAL, 'A', 'B')
    INTO DEPARTMENT_TB VALUES (DEPT_SEQ.NEXTVAL + 1, 'AB', 'BC')
    INTO DEPARTMENT_TB VALUES (DEPT_SEQ.NEXTVAL + 2, 'AC', 'BD')
SELECT * FROM DUAL; -- 아니 시부랄 DEPT_SEQ.NEXTVAL 가져오는게 다 똑같은데? 이것 때문에 무결성 제약 조건 위배

INSERT ALL
    INTO EMPLOYEE_TB VALUES (EMPLOYEE_SEQ.NEXTVAL, 'A', 21, 'B', 'M', '23/10/01', 1)
SELECT * FROM DUAL;

/*DELETE FROM DEPARTMENT_TB;
DELETE FROM EMPLOYEE_TB;*/
COMMIT;
ROLLBACK;   -- 바로 이전 커밋 수정

UPDATE DEPARTMENT_TB SET LOCATION = '인천' WHERE DEPT_NO = 3;
--UPDATE EMPLOYEE_TB SET SALARY = SALARY + SALARY * 10 / 100 WHERE DEPART = 2;
UPDATE EMPLOYEE_TB SET SALARY = 100 WHERE DEPART = 2;

DELETE FROM DEPARTMENT_TB WHERE DEPT_NO = 3;
DELETE FROM EMPLOYEE_TB WHERE DEPART = 1 OR DEPART = 4; -- WHERE DEPART IN(1, 4)
--DELETE FROM DEPARTMENT_TB 